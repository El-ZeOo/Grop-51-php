<?php


// title name
$name = 'Ziad';
?>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?= $name ?></title>
</head>

<body>
    <table border="1">
        <tr>
            <td>Compiler</td>
            <td>Interpreter</td>
        </tr>
        <tr>
            <td>An interpreter translates and executes the source code line by line, without producing an intermediate machine code or
                executable file.</td>
            <td>A compiler translates the entire source code into machine code or an executable file before execution.</td>
        </tr>
        <tr>
            <td colspan="2">
                intermediate machine code is also known as intermediate code or bytecode, refers to a low-level
                representation of a program that is generated by a compiler or an interpreter during the compilation
                or interpretation process. It serves as an intermediate step between the source code and the target machine code
                or directly executable program.
            </td>
        </tr>
        <tr>
            <td>
                It reads the source code, interprets it, and performs the instructions directly.
            </td>
            <td>
                It reads the source code, analyzes it as a whole, and generates an equivalent executable program.
            </td>

        </tr>
        <tr>
            <td>
                Interpreted programs are executed directly, which allows for easy debugging and dynamic runtime behavior.
            </td>
            <td>
                Compiled programs are generally faster than interpreted programs since the entire code is pre-converted into machine code.
            </td>

        </tr>
        <tr>
            <td>
                Interpreters typically have slower execution speed compared to compilers, as they need to analyze and execute each line of code at runtime.
            </td>
            <td>
                Compilers perform optimizations during the compilation process, resulting in efficient code execution.
                Compilation is a separate step performed before the execution, and the generated executable can be executed multiple times without recompilation.
            </td>
        </tr>
        <tr>
            <td>
                Examples of interpreted languages include Python, JavaScript, and Ruby.
            </td>

            <td>
                Examples of compiled languages include C, C++, Java, and Go.
            </td>
        </tr>
    </table>
    <br>
    <table border="1">
        <tr>
            <td>echo</td>
            <td>print-r</td>
        </tr>
        <tr>
            <td>
                echo is a language construct, not a function, so it doesn't require parentheses (although they can be used optionally).
            </td>
            <td>
                print_r is a function in PHP that takes one argument and displays its information in a readable format.
            </td>
        <tr>
            <td>
                It can output one or more expressions separated by commas.
            </td>
            <td>
                It is primarily used for debugging purposes to display the contents of arrays, objects, or other complex data structures.

            </td>

        </tr>
        <tr>
            <td>
                It has no return value, so it cannot be used in an assignment or as part of an expression.

            </td>
            <td>
                It provides more detailed information about the data, including the structure and data types.
            </td>

        </tr>
        <tr>
            <td>
                It is typically used to output strings, variables, or HTML markup.
            </td>
            <td>
                It returns true if it successfully printed the output or false if an error occurs.
            </td>
        </tr>
        <tr>
            <td>
                It is slightly faster and more commonly used for simple output.
            </td>

            <td>
                It can be used within an assignment or as part of an expression.
        </tr>
        </td>
        </tr>
    </table>
    <br>
</body>

</html>